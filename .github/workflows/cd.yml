name: Continous Deployment

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        flake8 juggle
        mypy juggle
        pytest --cov

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v2
      # TODO build and store release artifacts on github and just rsync to machine
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # sudo add-apt-repository -y ppa:deadsnakes/ppa
            # echo "deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main" > /etc/apt/sources.list.d/pgdg.list
            # wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
            # apt-get update && apt-get install -y python3.9-dev nginx postgresql-13

            # TODO: do blue/green deployments
            # TODO: exit with non 0 on failure

            # take the service out - nginx will handle errors
            pkill uwsgi

            cd /code/
            git checkout .
            git pull

            export SECRET_KEY="${{ secrets.SECRET_KEY }}"
            export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"

            source .venv/bin/activate
            pip install -r requirements.txt
            python manage.py migrate
            python manage.py collectstatic --noinput

            # bring service back up
            uwsgi --ini uwsgi.ini &
